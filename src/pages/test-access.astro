---
---

<html>
<head>
    <title>Access Control Test Suite</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background: #f8f9fa;
        }
        .header {
            background: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }
        .test-category {
            background: white;
            margin: 20px 0;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        .category-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            font-weight: 600;
            font-size: 18px;
        }
        .test-case {
            padding: 15px 20px;
            border-bottom: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .test-case:last-child {
            border-bottom: none;
        }
        .test-info {
            flex: 1;
        }
        .test-name {
            font-weight: 600;
            margin-bottom: 5px;
        }
        .test-details {
            font-size: 14px;
            color: #666;
        }
        .test-status {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            min-width: 80px;
            text-align: center;
        }
        .status-passed {
            background: #d4edda;
            color: #155724;
        }
        .status-failed {
            background: #f8d7da;
            color: #721c24;
        }
        .status-running {
            background: #fff3cd;
            color: #856404;
        }
        .summary {
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }
        .summary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 15px;
        }
        .summary-card {
            text-align: center;
            padding: 15px;
            border-radius: 8px;
            background: #f8f9fa;
        }
        .summary-number {
            font-size: 28px;
            font-weight: 700;
            display: block;
        }
        .summary-label {
            font-size: 12px;
            color: #666;
            text-transform: uppercase;
            margin-top: 5px;
        }
        .run-button {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            font-size: 16px;
            transition: transform 0.2s;
        }
        .run-button:hover {
            transform: translateY(-2px);
        }
        .run-button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }
        .loading {
            display: inline-block;
            margin-left: 10px;
        }
        .user-groups {
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }
        .user-group {
            margin: 15px 0;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 8px;
        }
        .user-group h4 {
            margin: 0 0 10px 0;
            color: #333;
        }
        .user-group p {
            margin: 5px 0;
            font-size: 14px;
            color: #666;
        }
        .positive-test { border-left: 4px solid #28a745; }
        .negative-test { border-left: 4px solid #dc3545; }
    </style>
</head>
<body>
    <div class="header">
        <h1>üîê Access Control Test Suite</h1>
        <p>Comprehensive testing of role-based access control for challenges and Circle_Management content</p>
        <button id="runTests" class="run-button">
            Run All Tests
            <span id="loading" class="loading" style="display: none;">‚è≥</span>
        </button>
    </div>

    <div class="user-groups">
        <h3>üë• User Groups & Expected Access</h3>
        <div class="user-group">
            <h4>üåç Public Users (No Login)</h4>
            <p><strong>Access:</strong> Read-only access to /challenges</p>
            <p><strong>Restrictions:</strong> Cannot edit, cannot access Circle_Management</p>
        </div>
        <div class="user-group">
            <h4>üë• Working Group Members (46 users)</h4>
            <p><strong>Access:</strong> Read/Edit access to /challenges only</p>
            <p><strong>Sample Users:</strong> abirathamir@gmail.com, alex.coaton@gmail.com</p>
            <p><strong>Restrictions:</strong> Cannot access Circle_Management</p>
        </div>
        <div class="user-group">
            <h4>‚ö° Management Team (2 users)</h4>
            <p><strong>Access:</strong> Read/Edit access to /challenges + /Circle_Management</p>
            <p><strong>Users:</strong> dave.braendler@productfoundry.ai, ravi.shamihoke@productfoundry.ai</p>
        </div>
    </div>

    <div id="summary" class="summary" style="display: none;">
        <h3>üìä Test Results Summary</h3>
        <div class="summary-grid">
            <div class="summary-card">
                <span id="totalTests" class="summary-number">-</span>
                <span class="summary-label">Total Tests</span>
            </div>
            <div class="summary-card">
                <span id="passedTests" class="summary-number">-</span>
                <span class="summary-label">Passed</span>
            </div>
            <div class="summary-card">
                <span id="failedTests" class="summary-number">-</span>
                <span class="summary-label">Failed</span>
            </div>
            <div class="summary-card">
                <span id="overallStatus" class="summary-number">-</span>
                <span class="summary-label">Status</span>
            </div>
        </div>
    </div>

    <div id="testResults"></div>

    <script>
        document.getElementById('runTests').addEventListener('click', async () => {
            const button = document.getElementById('runTests');
            const loading = document.getElementById('loading');
            const summary = document.getElementById('summary');
            const resultsDiv = document.getElementById('testResults');
            
            // Show loading state
            button.disabled = true;
            loading.style.display = 'inline';
            resultsDiv.innerHTML = '<p>Running tests...</p>';
            
            try {
                const response = await fetch('/api/test-access-comprehensive');
                const data = await response.json();
                
                // Update summary
                document.getElementById('totalTests').textContent = data.testSummary.totalTests;
                document.getElementById('passedTests').textContent = data.testSummary.passed;
                document.getElementById('failedTests').textContent = data.testSummary.failed;
                document.getElementById('overallStatus').textContent = data.testSummary.overallStatus;
                summary.style.display = 'block';
                
                // Display test results
                resultsDiv.innerHTML = '';
                
                const categories = {
                    publicAccess: 'üåç Public Access Tests',
                    workingGroupAccess: 'üë• Working Group Access Tests', 
                    managementAccess: '‚ö° Management Access Tests'
                };
                
                Object.entries(categories).forEach(([categoryKey, categoryTitle]) => {
                    const tests = data.testCategories[categoryKey];
                    if (tests && tests.length > 0) {
                        const categoryDiv = document.createElement('div');
                        categoryDiv.className = 'test-category';
                        
                        categoryDiv.innerHTML = `
                            <div class="category-header">${categoryTitle}</div>
                            ${tests.map(test => `
                                <div class="test-case ${test.testType}-test">
                                    <div class="test-info">
                                        <div class="test-name">${test.name}</div>
                                        <div class="test-details">
                                            ${test.method} ${test.path} | Expected: ${test.expectedStatus} | Actual: ${test.actualStatus}
                                            <br>
                                            <em>${test.expectedBehavior}</em>
                                            ${test.error ? `<br><strong>Error:</strong> ${test.error}` : ''}
                                        </div>
                                    </div>
                                    <div class="test-status status-${test.passed ? 'passed' : 'failed'}">
                                        ${test.passed ? '‚úÖ PASS' : '‚ùå FAIL'}
                                    </div>
                                </div>
                            `).join('')}
                        `;
                        
                        resultsDiv.appendChild(categoryDiv);
                    }
                });
                
            } catch (error) {
                resultsDiv.innerHTML = `<div class="test-category">
                    <div class="category-header">‚ùå Error Running Tests</div>
                    <div class="test-case">
                        <div class="test-info">
                            <div class="test-name">Test Execution Failed</div>
                            <div class="test-details">${error.message}</div>
                        </div>
                        <div class="test-status status-failed">ERROR</div>
                    </div>
                </div>`;
            } finally {
                // Hide loading state
                button.disabled = false;
                loading.style.display = 'none';
            }
        });
    </script>
</body>
</html>