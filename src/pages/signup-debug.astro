---
// Debug version of signup form
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Debug Sign Up - AI Product Development Wiki</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 2rem auto;
            padding: 2rem;
            background-color: #f5f5f5;
        }
        .container {
            background: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 1rem;
        }
        label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: bold;
        }
        input {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            background: #059669;
            color: white;
            padding: 0.75rem;
            border: none;
            border-radius: 4px;
            font-size: 1rem;
            cursor: pointer;
            margin-top: 1rem;
        }
        button:hover {
            background: #047857;
        }
        button:disabled {
            background: #9ca3af;
            cursor: not-allowed;
        }
        .debug {
            background: #f0f0f0;
            padding: 1rem;
            margin-top: 1rem;
            border-radius: 4px;
            font-family: monospace;
            font-size: 0.9em;
            white-space: pre-wrap;
            max-height: 300px;
            overflow-y: auto;
        }
        .result {
            margin-top: 1rem;
            padding: 1rem;
            border-radius: 4px;
            display: none;
        }
        .success {
            background: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
        }
        .error {
            background: #f8d7da;
            border: 1px solid #f5c6cb;
            color: #721c24;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Debug Sign Up Form</h1>
        
        <form id="signupForm">
            <div class="form-group">
                <label for="firstName">First Name *</label>
                <input type="text" id="firstName" name="firstName" required>
            </div>
            
            <div class="form-group">
                <label for="lastName">Last Name *</label>
                <input type="text" id="lastName" name="lastName" required>
            </div>
            
            <div class="form-group">
                <label for="email">Email Address *</label>
                <input type="email" id="email" name="email" required placeholder="your-email@productfoundry.ai">
            </div>
            
            <div class="form-group">
                <label for="password">Password *</label>
                <input type="password" id="password" name="password" required minlength="8" placeholder="Minimum 8 characters">
            </div>
            
            <button type="submit" id="submitBtn">Create Account</button>
        </form>
        
        <div id="result" class="result"></div>
        
        <div id="debug" class="debug">Debug output will appear here...</div>
        
        <p style="margin-top: 2rem; text-align: center;">
            <a href="/">← Back to Home</a>
        </p>
    </div>
    
    <script>
        const debugLog = (message) => {
            const debugDiv = document.getElementById('debug');
            const timestamp = new Date().toISOString().split('T')[1].substring(0, 8);
            debugDiv.textContent += `[${timestamp}] ${message}\n`;
            debugDiv.scrollTop = debugDiv.scrollHeight;
        };

        debugLog('Page loaded');
        
        document.getElementById('signupForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            debugLog('Form submitted');
            
            const submitBtn = document.getElementById('submitBtn');
            const resultDiv = document.getElementById('result');
            
            // Get form data
            const formData = {
                firstName: document.getElementById('firstName').value.trim(),
                lastName: document.getElementById('lastName').value.trim(),
                email: document.getElementById('email').value.trim(),
                password: document.getElementById('password').value
            };
            
            debugLog('Form data collected: ' + JSON.stringify({...formData, password: '***'}));
            
            // Validate
            if (!formData.firstName || !formData.lastName || !formData.email || !formData.password) {
                debugLog('Validation failed - missing fields');
                showResult('error', 'All fields are required');
                return;
            }
            
            debugLog('Validation passed');
            
            // Disable button and show loading
            submitBtn.disabled = true;
            submitBtn.textContent = 'Creating Account...';
            debugLog('Button disabled, showing loading state');
            
            try {
                debugLog('Sending request to /api/frontend-signup');
                const response = await fetch('/api/frontend-signup', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });
                
                debugLog(`Response received: ${response.status} ${response.statusText}`);
                
                const result = await response.json();
                debugLog('Response data: ' + JSON.stringify(result));
                
                if (result.success) {
                    debugLog('Success! User created with ID: ' + result.userId);
                    showResult('success', `✅ Account created successfully!<br>User ID: ${result.userId}<br>Check your Clerk Dashboard - the user should appear immediately.`);
                    document.getElementById('signupForm').reset();
                    debugLog('Form reset');
                } else {
                    debugLog('Failed: ' + result.error);
                    showResult('error', `❌ ${result.error}`);
                }
                
            } catch (error) {
                debugLog('Error caught: ' + error.message);
                showResult('error', `❌ Network error: ${error.message}`);
            } finally {
                submitBtn.disabled = false;
                submitBtn.textContent = 'Create Account';
                debugLog('Button re-enabled');
            }
        });
        
        function showResult(type, message) {
            const resultDiv = document.getElementById('result');
            resultDiv.className = `result ${type}`;
            resultDiv.innerHTML = message;
            resultDiv.style.display = 'block';
            debugLog(`Result shown: ${type}`);
        }
        
        // Add debug info for each input
        ['firstName', 'lastName', 'email', 'password'].forEach(id => {
            document.getElementById(id).addEventListener('input', (e) => {
                debugLog(`${id} changed: ${e.target.value.length} chars`);
            });
        });
    </script>
</body>
</html>