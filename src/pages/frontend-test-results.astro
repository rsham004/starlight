---
// Automated frontend signup testing page
---

<html>
<head>
    <title>Frontend Signup Test Results</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 1000px; margin: 2rem auto; padding: 2rem; }
        .test-result { 
            background: #f8f9fa; 
            padding: 1rem; 
            margin: 1rem 0; 
            border-radius: 4px; 
            border-left: 4px solid #007bff; 
        }
        .success { border-left-color: #28a745; background: #d4edda; }
        .error { border-left-color: #dc3545; background: #f8d7da; }
        .warning { border-left-color: #ffc107; background: #fff3cd; }
        pre { 
            background: #fff; 
            padding: 1rem; 
            border-radius: 4px; 
            overflow-x: auto; 
            font-size: 0.9em;
            border: 1px solid #ddd;
        }
        .loading { text-align: center; padding: 2rem; }
        h3 { margin-top: 0; }
        .summary { font-size: 1.1em; font-weight: bold; }
    </style>
</head>
<body>
    <h1>üß™ Frontend Signup Test Results</h1>
    
    <div id="loading" class="loading">
        <h2>üîÑ Testing frontend signup functionality...</h2>
        <p>This will test the /api/frontend-signup endpoint that the working form uses.</p>
    </div>
    
    <div id="results" style="display: none;"></div>
    
    <script>
        async function runFrontendTests() {
            try {
                console.log('Running frontend signup tests...');
                const response = await fetch('/api/test-frontend-signup');
                const results = await response.json();
                
                document.getElementById('loading').style.display = 'none';
                document.getElementById('results').style.display = 'block';
                
                let html = `<h2>üìä Frontend Signup Test Results (${results.timestamp})</h2>`;
                
                let initialCount = 0;
                let finalCount = 0;
                let successfulSignups = 0;
                
                results.tests.forEach((test, index) => {
                    let cssClass = 'test-result';
                    if (test.success) {
                        cssClass += ' success';
                    } else if (test.expectedFailure) {
                        cssClass += ' warning';
                    } else {
                        cssClass += ' error';
                    }
                    
                    const icon = test.success ? '‚úÖ' : test.expectedFailure ? '‚ö†Ô∏è' : '‚ùå';
                    
                    html += `<div class="${cssClass}">`;
                    html += `<h3>${icon} Test ${index + 1}: ${test.test}</h3>`;
                    
                    if (test.email) {
                        html += `<p><strong>Email:</strong> ${test.email}</p>`;
                    }
                    
                    if (test.userCount !== undefined) {
                        html += `<p><strong>User Count:</strong> ${test.userCount}</p>`;
                        if (test.test === 'Initial User Count') {
                            initialCount = test.userCount;
                        } else if (test.test === 'Final User Count') {
                            finalCount = test.userCount;
                        }
                    }
                    
                    if (test.userId) {
                        html += `<p><strong>‚úÖ User Created!</strong> ID: ${test.userId}</p>`;
                        successfulSignups++;
                    }
                    
                    if (test.status) {
                        html += `<p><strong>HTTP Status:</strong> ${test.status}</p>`;
                    }
                    
                    if (test.message) {
                        html += `<p><strong>Message:</strong> ${test.message}</p>`;
                    }
                    
                    if (test.expectedFailure) {
                        html += `<p><strong>Note:</strong> This test was expected to fail (validation test)</p>`;
                    }
                    
                    if (test.error) {
                        html += `<p><strong>‚ùå Error:</strong> ${test.error}</p>`;
                    }
                    
                    if (test.response && test.response.details) {
                        html += `<p><strong>Details:</strong></p>`;
                        html += `<pre>${JSON.stringify(test.response.details, null, 2)}</pre>`;
                    }
                    
                    html += '</div>';
                });
                
                // Summary
                const usersCreated = finalCount - initialCount;
                const signupTests = results.tests.filter(t => t.email && !t.expectedFailure);
                
                html += `<div class="test-result ${usersCreated > 0 ? 'success' : 'error'}">`;
                html += `<h3>üìã Summary</h3>`;
                html += `<p class="summary"><strong>Users created:</strong> ${usersCreated} (from ${initialCount} to ${finalCount})</p>`;
                html += `<p><strong>Signup attempts:</strong> ${signupTests.length}</p>`;
                html += `<p><strong>Successful signups:</strong> ${successfulSignups}</p>`;
                
                if (usersCreated > 0) {
                    html += `<p class="summary">‚úÖ <strong>Frontend signup is working!</strong> Users are being created in Clerk.</p>`;
                    html += `<p>üîç Check your Clerk Dashboard - you should see the new users.</p>`;
                } else {
                    html += `<p class="summary">‚ùå <strong>Frontend signup is not working.</strong> No users were created.</p>`;
                    html += `<p>üîç Check the error messages above for details.</p>`;
                }
                
                html += '</div>';
                
                // Instructions
                html += `<div class="test-result">`;
                html += `<h3>üéØ Next Steps</h3>`;
                if (usersCreated > 0) {
                    html += `<p>‚úÖ Frontend signup is working! You can now:</p>`;
                    html += `<ul>`;
                    html += `<li>Test the form manually at <a href="/signup-working">/signup-working</a></li>`;
                    html += `<li>Replace the problematic Clerk components with this working version</li>`;
                    html += `<li>Add this form to your main navigation</li>`;
                    html += `</ul>`;
                } else {
                    html += `<p>‚ùå Frontend signup needs more debugging:</p>`;
                    html += `<ul>`;
                    html += `<li>Check the error messages above</li>`;
                    html += `<li>Verify the API endpoint is accessible</li>`;
                    html += `<li>Test the manual form at <a href="/signup-working">/signup-working</a></li>`;
                    html += `</ul>`;
                }
                html += `</div>`;
                
                document.getElementById('results').innerHTML = html;
                
            } catch (error) {
                document.getElementById('loading').innerHTML = `<h2>‚ùå Error running tests</h2><p>${error.message}</p>`;
                console.error('Test error:', error);
            }
        }
        
        // Auto-run tests when page loads
        window.addEventListener('load', runFrontendTests);
    </script>
    
    <p><a href="/signup-working">Test Manual Form</a> | <a href="/">‚Üê Back to Home</a></p>
</body>
</html>