---
// Premium Dashboard Component for Role-Based Welcome Experience
---

<div id="premium-dashboard" class="dashboard-container">
  <div class="dashboard-header">
    <div class="welcome-section">
      <h1 class="welcome-title">
        <span class="text-gradient">Welcome to AI Product Development</span>
      </h1>
      <p class="welcome-subtitle" id="welcome-message">
        Explore challenges, collaborate with the community, and build the future of AI
      </p>
    </div>
    
    <div class="stats-grid">
      <div class="stat-card card-premium">
        <div class="stat-icon">
          <svg width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
            <path d="M6 2a.5.5 0 0 1 .47.33L10 12H4.5a.5.5 0 0 1-.48-.64L6.04 2.01A.5.5 0 0 1 6 2zm-2.57 8.5h5.114L6.045 3.999 3.43 10.5zM13.5 12H11l-1.5-4h2l1.5 4z"/>
          </svg>
        </div>
        <div class="stat-content">
          <div class="stat-number">14</div>
          <div class="stat-label">Active Challenges</div>
        </div>
      </div>
      
      <div class="stat-card card-premium">
        <div class="stat-icon">
          <svg width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
            <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
            <path d="M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z"/>
            <path d="M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z"/>
          </svg>
        </div>
        <div class="stat-content">
          <div class="stat-number">46+</div>
          <div class="stat-label">Community Members</div>
        </div>
      </div>
      
      <div class="stat-card card-premium">
        <div class="stat-icon">
          <svg width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
            <path d="M5.5 2A1.5 1.5 0 0 0 4 3.5v9a1.5 1.5 0 0 0 1.5 1.5h8a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 13.5 2h-8zM5 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9z"/>
            <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V6.5a.5.5 0 0 0-1 0v3.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z"/>
          </svg>
        </div>
        <div class="stat-content">
          <div class="stat-number">‚àû</div>
          <div class="stat-label">Learning Opportunities</div>
        </div>
      </div>
    </div>
  </div>

  <div class="dashboard-content">
    <!-- Quick Actions -->
    <div class="quick-actions-section">
      <h2 class="section-title">Quick Actions</h2>
      <div class="actions-grid" id="actions-grid">
        <!-- Default actions shown before JavaScript loads -->
        <a href="/challenges/overview" class="action-card action-primary">
          <div class="action-priority priority-1"></div>
          <div class="action-icon">
            <svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
              <path d="M6 2a.5.5 0 0 1 .47.33L10 12H4.5a.5.5 0 0 1-.48-.64L6.04 2.01A.5.5 0 0 1 6 2zm-2.57 8.5h5.114L6.045 3.999 3.43 10.5zM13.5 12H11l-1.5-4h2l1.5 4z"/>
            </svg>
          </div>
          <h3 class="action-title">Explore Challenges</h3>
          <p class="action-description">Discover AI development challenges and start building</p>
        </a>
        
        <a href="https://shorturl.at/X9ONg" class="action-card action-primary">
          <div class="action-priority priority-2"></div>
          <div class="action-icon">
            <svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
              <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
              <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
            </svg>
          </div>
          <h3 class="action-title">Join the Community</h3>
          <p class="action-description">Connect with AI builders and unlock premium features</p>
        </a>
        
        <a href="/getting-started" class="action-card action-secondary">
          <div class="action-priority priority-3"></div>
          <div class="action-icon">
            <svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
              <path d="M5.5 2A1.5 1.5 0 0 0 4 3.5v9a1.5 1.5 0 0 0 1.5 1.5h8a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 13.5 2h-8zM5 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9z"/>
              <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V6.5a.5.5 0 0 0-1 0v3.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z"/>
            </svg>
          </div>
          <h3 class="action-title">Quick Start Guide</h3>
          <p class="action-description">Learn how to get started with AI development</p>
        </a>
      </div>
    </div>

    <!-- Phase 4 Advanced Components -->
    <div class="phase4-components">
      <!-- Personalized Widgets -->
      <div class="component-section">
        <div id="personalized-widgets-container">
          <div class="component-loading">
            <div class="loading-content">
              <h3>üéõÔ∏è Personalized Widgets</h3>
              <p>Customize your dashboard with personalized widgets and tools</p>
              <small>Available for authenticated users</small>
            </div>
          </div>
        </div>
      </div>
      
      <!-- AI Recommendations -->
      <div class="component-section">
        <div id="ai-recommendations-container">
          <div class="component-loading">
            <div class="loading-content">
              <h3>ü§ñ AI Recommendations</h3>
              <p>Get personalized AI-powered content recommendations</p>
              <small>Advanced machine learning algorithms</small>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Advanced Search -->
      <div class="component-section">
        <div id="advanced-search-container">
          <div class="component-loading">
            <div class="loading-content">
              <h3>üîç Advanced Search</h3>
              <p>Powerful search with AI-powered filtering and voice support</p>
              <small>Voice search and intelligent filters</small>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Usage Analytics -->
      <div class="component-section">
        <div id="usage-analytics-container">
          <div class="component-loading">
            <div class="loading-content">
              <h3>üìä Usage Analytics</h3>
              <p>Track your learning progress and platform engagement</p>
              <small>Detailed insights and progress tracking</small>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Recent Activity -->
    <div class="recent-activity-section">
      <h2 class="section-title">Recent Updates</h2>
      <div class="activity-list">
        <div class="activity-item">
          <div class="activity-icon">
            <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
              <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
              <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
            </svg>
          </div>
          <div class="activity-content">
            <h4 class="activity-title">Phase 4: Advanced Personalization Complete</h4>
            <p class="activity-description">AI-powered features, advanced search, analytics, and adaptive interface</p>
            <span class="activity-time">Just now</span>
          </div>
        </div>
        
        <div class="activity-item">
          <div class="activity-icon">
            <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
              <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
              <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
            </svg>
          </div>
          <div class="activity-content">
            <h4 class="activity-title">New Challenge: Te Ao AI Website</h4>
            <p class="activity-description">Build a culturally aware AI website representing MƒÅori values</p>
            <span class="activity-time">2 days ago</span>
          </div>
        </div>
        
        <div class="activity-item">
          <div class="activity-icon">
            <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
              <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V6.5a.5.5 0 0 0-1 0v3.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z"/>
            </svg>
          </div>
          <div class="activity-content">
            <h4 class="activity-title">Premium UI Update</h4>
            <p class="activity-description">Enhanced visual design and user experience improvements</p>
            <span class="activity-time">1 hour ago</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  class PremiumDashboard {
    constructor() {
      this.dashboardEl = document.getElementById('premium-dashboard');
      this.welcomeMessageEl = document.getElementById('welcome-message');
      this.actionsGrid = document.getElementById('actions-grid');
      
      this.phase4Components = {
        personalizedWidgets: null,
        aiRecommendations: null,
        advancedSearch: null,
        usageAnalytics: null,
        adaptiveInterface: null
      };
      
      this.init();
    }
    
    async init() {
      // Only show dashboard on home page
      if (window.location.pathname === '/' || window.location.pathname === '/wiki/') {
        await this.loadUserDashboard();
        await this.loadPhase4Components();
        this.showDashboard();
      }
    }
    
    async loadUserDashboard() {
      try {
        const response = await fetch('/api/auth/user');
        if (response.ok) {
          const userData = await response.json();
          if (userData.userId) {
            this.customizeForUser(userData);
          } else {
            this.customizeForPublic();
          }
        } else {
          this.customizeForPublic();
        }
      } catch (error) {
        console.log('Could not load user data for dashboard:', error);
        this.customizeForPublic();
      }
    }
    
    customizeForUser(userData) {
      const role = userData.role || 'public';
      const email = userData.email || '';
      const username = email.split('@')[0] || 'User';
      
      // Format username nicely
      const formattedName = username
        .split(/[._-]/)
        .map(part => part.charAt(0).toUpperCase() + part.slice(1))
        .join(' ');
      
      // Role-specific welcome messages and dashboard customization
      const roleConfig = {
        'management': {
          welcome: `Welcome back, ${formattedName}! Ready to lead the AI revolution?`,
          subtitle: 'Manage the community, review progress, and shape the future',
          primaryColor: '--premium-primary',
          bgGradient: 'linear-gradient(135deg, rgba(0, 102, 255, 0.1) 0%, rgba(99, 102, 241, 0.1) 100%)'
        },
        'working_group': {
          welcome: `Welcome back, ${formattedName}! Time to build amazing AI solutions!`,
          subtitle: 'Collaborate with fellow builders and tackle exciting challenges',
          primaryColor: '--premium-accent',
          bgGradient: 'linear-gradient(135deg, rgba(16, 185, 129, 0.1) 0%, rgba(34, 197, 94, 0.1) 100%)'
        },
        'public': {
          welcome: `Welcome, ${formattedName}! Explore the world of AI development`,
          subtitle: 'Discover challenges, learn from the community, and start your AI journey',
          primaryColor: '--premium-secondary',
          bgGradient: 'linear-gradient(135deg, rgba(99, 102, 241, 0.1) 0%, rgba(168, 85, 247, 0.1) 100%)'
        }
      };
      
      const config = roleConfig[role] || roleConfig.public;
      
      // Apply customization
      this.welcomeMessageEl.textContent = config.welcome;
      
      // Add role-specific styling to dashboard
      this.dashboardEl.style.background = config.bgGradient;
      this.dashboardEl.classList.add(`dashboard-${role}`);
      
      // Update quick actions based on role
      this.updateQuickActions(role);
      
      // Update stats based on role
      this.updateRoleSpecificStats(role);
    }
    
    customizeForPublic() {
      this.welcomeMessageEl.textContent = 
        'Explore challenges, collaborate with the community, and build the future of AI';
      
      // Add public user styling
      this.dashboardEl.style.background = 'linear-gradient(135deg, rgba(99, 102, 241, 0.05) 0%, rgba(168, 85, 247, 0.05) 100%)';
      this.dashboardEl.classList.add('dashboard-public');
      
      // Update quick actions for public users
      this.updateQuickActions('public');
    }
    
    updateQuickActions(role) {
      const actionSets = {
        'management': [
          {
            href: '/Circle_Management/management_tasks',
            icon: `<svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
                  </svg>`,
            title: 'Management Hub',
            description: 'Access admin tools and member management',
            priority: 1,
            category: 'primary'
          },
          {
            href: '/Circle_Management/member_table',
            icon: `<svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
                    <path d="M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z"/>
                  </svg>`,
            title: 'Member Directory',
            description: 'Manage team members and permissions',
            priority: 2,
            category: 'primary'
          },
          {
            href: '/challenges/Challenges_list',
            icon: `<svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M6 2a.5.5 0 0 1 .47.33L10 12H4.5a.5.5 0 0 1-.48-.64L6.04 2.01A.5.5 0 0 1 6 2zm-2.57 8.5h5.114L6.045 3.999 3.43 10.5zM13.5 12H11l-1.5-4h2l1.5 4z"/>
                  </svg>`,
            title: 'Challenge Library',
            description: 'Review and manage community challenges',
            priority: 3,
            category: 'secondary'
          },
          {
            href: '/Events/Events_overview',
            icon: `<svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M4 .5a.5.5 0 0 0-1 0V1H2a2 2 0 0 0-2 2v1h16V3a2 2 0 0 0-2-2h-1V.5a.5.5 0 0 0-1 0V1H4V.5zM16 14V5H0v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2z"/>
                  </svg>`,
            title: 'Events Calendar',
            description: 'Schedule and manage community events',
            priority: 4,
            category: 'secondary'
          }
        ],
        'working_group': [
          {
            href: '/challenges/Challenges_list',
            icon: `<svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M6 2a.5.5 0 0 1 .47.33L10 12H4.5a.5.5 0 0 1-.48-.64L6.04 2.01A.5.5 0 0 1 6 2zm-2.57 8.5h5.114L6.045 3.999 3.43 10.5zM13.5 12H11l-1.5-4h2l1.5 4z"/>
                  </svg>`,
            title: 'Your Challenge Library',
            description: 'Access your personalized AI development challenges',
            priority: 1,
            category: 'primary'
          },
          {
            href: '/Events/Events_overview',
            icon: `<svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M4 .5a.5.5 0 0 0-1 0V1H2a2 2 0 0 0-2 2v1h16V3a2 2 0 0 0-2-2h-1V.5a.5.5 0 0 0-1 0V1H4V.5zM16 14V5H0v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2z"/>
                  </svg>`,
            title: 'AI Builder Events',
            description: 'Join exclusive events and collaboration sessions',
            priority: 2,
            category: 'primary'
          },
          {
            href: '/contributing',
            icon: `<svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                  </svg>`,
            title: 'Contribute to Projects',
            description: 'Share your solutions and collaborate with builders',
            priority: 3,
            category: 'secondary'
          },
          {
            href: '/exploration/RuV/RuV-SynapticMesh-explanation',
            icon: `<svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
                  </svg>`,
            title: 'Research & Exploration',
            description: 'Dive into advanced AI research and concepts',
            priority: 4,
            category: 'secondary'
          }
        ],
        'public': [
          {
            href: '/challenges/overview',
            icon: `<svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M6 2a.5.5 0 0 1 .47.33L10 12H4.5a.5.5 0 0 1-.48-.64L6.04 2.01A.5.5 0 0 1 6 2zm-2.57 8.5h5.114L6.045 3.999 3.43 10.5zM13.5 12H11l-1.5-4h2l1.5 4z"/>
                  </svg>`,
            title: 'Explore Challenges',
            description: 'Discover AI development challenges and start building',
            priority: 1,
            category: 'primary'
          },
          {
            href: 'https://shorturl.at/X9ONg',
            icon: `<svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                  </svg>`,
            title: 'Join the Community',
            description: 'Sign up to unlock advanced features and collaborate',
            priority: 2,
            category: 'primary'
          },
          {
            href: '/contributing',
            icon: `<svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
                    <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
                  </svg>`,
            title: 'How to Contribute',
            description: 'Learn how to contribute to AI development projects',
            priority: 3,
            category: 'secondary'
          },
          {
            href: '/getting-started',
            icon: `<svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                    <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                  </svg>`,
            title: 'Getting Started',
            description: 'Quick start guide for AI development',
            priority: 4,
            category: 'secondary'
          }
        ]
      };
      
      const actions = actionSets[role] || actionSets.public;
      
      // Only replace if content is empty or has placeholder content
      const hasStaticContent = this.actionsGrid.querySelector('.action-card');
      if (!hasStaticContent || this.actionsGrid.innerHTML.includes('<!-- Actions will be populated dynamically')) {
        // Clear existing actions only if needed
        this.actionsGrid.innerHTML = '';
        
        // Add actions with staggered animation
        actions.forEach((action, index) => {
        const actionCard = document.createElement('a');
        actionCard.href = action.href;
        actionCard.className = `action-card card action-${action.category}`;
        actionCard.style.animationDelay = `${index * 0.1}s`;
        actionCard.innerHTML = `
          <div class="action-icon">
            ${action.icon}
          </div>
          <h3 class="action-title">${action.title}</h3>
          <p class="action-description">${action.description}</p>
          <div class="action-priority priority-${action.priority}"></div>
        `;
        
        this.actionsGrid.appendChild(actionCard);
        
        // Add entrance animation
        setTimeout(() => {
          actionCard.classList.add('animate-fade-in-up');
        }, index * 100);
      });
      }
    }
    
    updateRoleSpecificStats(role) {
      const statsCards = document.querySelectorAll('.stat-card');
      
      // Role-specific stat updates
      const roleStats = {
        'management': {
          0: { number: '23', label: 'Active Projects', icon: 'management' },
          1: { number: '156+', label: 'Team Members', icon: 'team' },
          2: { number: '‚àû', label: 'Innovation Opportunities', icon: 'innovation' }
        },
        'working_group': {
          0: { number: '12', label: 'Your Challenges', icon: 'challenges' },
          1: { number: '89+', label: 'Builder Network', icon: 'network' },
          2: { number: '‚àû', label: 'Learning Paths', icon: 'learning' }
        },
        'public': {
          0: { number: '14', label: 'Active Challenges', icon: 'public' },
          1: { number: '46+', label: 'Community Members', icon: 'community' },
          2: { number: '‚àû', label: 'Learning Opportunities', icon: 'opportunity' }
        }
      };
      
      const stats = roleStats[role] || roleStats.public;
      
      statsCards.forEach((card, index) => {
        if (stats[index]) {
          const numberEl = card.querySelector('.stat-number');
          const labelEl = card.querySelector('.stat-label');
          
          if (numberEl && labelEl) {
            // Add counting animation
            this.animateStatNumber(numberEl, stats[index].number);
            labelEl.textContent = stats[index].label;
            
            // Add role-specific card styling
            card.classList.add(`stat-${role}`);
          }
        }
      });
    }
    
    animateStatNumber(element, targetText) {
      // Simple counting animation for numbers
      if (targetText.match(/^\d+$/)) {
        const target = parseInt(targetText);
        let current = 0;
        const increment = target / 20;
        const timer = setInterval(() => {
          current += increment;
          if (current >= target) {
            current = target;
            clearInterval(timer);
          }
          element.textContent = Math.floor(current).toString();
        }, 50);
      } else {
        // For non-numeric values, just set directly with a small delay
        setTimeout(() => {
          element.textContent = targetText;
        }, 200);
      }
    }
    
    async loadPhase4Components() {
      try {
        // Load PersonalizedWidgets
        const widgetsContainer = document.getElementById('personalized-widgets-container');
        if (widgetsContainer) {
          const widgetsResponse = await fetch('/src/components/PersonalizedWidgets.astro');
          if (widgetsResponse.ok) {
            // In a real implementation, this would properly load the Astro component
            // For now, we'll create a placeholder that initializes the component
            // Only replace if no good content exists
            if (!widgetsContainer.querySelector('.loading-content')) {
              widgetsContainer.innerHTML = '<div class="component-loading">Loading personalized widgets...</div>';
            }
            
            // Initialize the widgets after a brief delay
            setTimeout(() => {
              this.initializePersonalizedWidgets(widgetsContainer);
            }, 1000);
          }
        }
        
        // Load AI Recommendations
        const recommendationsContainer = document.getElementById('ai-recommendations-container');
        if (recommendationsContainer) {
          // Only replace if no good content exists
          if (!recommendationsContainer.querySelector('.loading-content')) {
            recommendationsContainer.innerHTML = '<div class="component-loading">Loading AI recommendations...</div>';
          }
          setTimeout(() => {
            this.initializeAIRecommendations(recommendationsContainer);
          }, 1500);
        }
        
        // Load Advanced Search
        const searchContainer = document.getElementById('advanced-search-container');
        if (searchContainer) {
          // Only replace if no good content exists
          if (!searchContainer.querySelector('.loading-content')) {
            searchContainer.innerHTML = '<div class="component-loading">Loading advanced search...</div>';
          }
          setTimeout(() => {
            this.initializeAdvancedSearch(searchContainer);
          }, 2000);
        }
        
        // Load Usage Analytics
        const analyticsContainer = document.getElementById('usage-analytics-container');
        if (analyticsContainer) {
          // Only replace if no good content exists
          if (!analyticsContainer.querySelector('.loading-content')) {
            analyticsContainer.innerHTML = '<div class="component-loading">Loading usage analytics...</div>';
          }
          setTimeout(() => {
            this.initializeUsageAnalytics(analyticsContainer);
          }, 2500);
        }
        
        // Initialize Adaptive Interface (no container needed, it's a global system)
        setTimeout(() => {
          this.initializeAdaptiveInterface();
        }, 3000);
        
      } catch (error) {
        console.log('Phase 4 components loading with progressive enhancement:', error);
      }
    }
    
    initializePersonalizedWidgets(container) {
      // Only replace content if it doesn't have the enhanced loading content
      const hasEnhancedContent = container.querySelector('.loading-content');
      if (!hasEnhancedContent) {
        container.innerHTML = `
          <div class="phase4-widget personalized-widgets">
            <div class="widget-header">
              <h3>üéØ Personalized Dashboard</h3>
              <p>Customized widgets based on your preferences and activity</p>
            </div>
            <div class="widget-content">
              <div class="widget-grid">
                <div class="mini-widget">
                  <div class="widget-icon">üìà</div>
                  <div class="widget-info">
                    <div class="widget-value">5</div>
                    <div class="widget-label">Active Widgets</div>
                  </div>
                </div>
                <div class="mini-widget">
                  <div class="widget-icon">‚ö°</div>
                  <div class="widget-info">
                    <div class="widget-value">12</div>
                    <div class="widget-label">Quick Actions</div>
                  </div>
                </div>
                <div class="mini-widget">
                  <div class="widget-icon">üé®</div>
                  <div class="widget-info">
                    <div class="widget-value">3</div>
                    <div class="widget-label">Themes</div>
                  </div>
                </div>
              </div>
              <div class="widget-actions">
                <button class="widget-button primary">Customize Dashboard</button>
                <button class="widget-button secondary">Reset Layout</button>
              </div>
            </div>
          </div>
        `;
      } else {
        // Keep the enhanced content and just add functionality
        container.classList.add('component-ready');
      }
    }
    
    initializeAIRecommendations(container) {
      // Only replace content if it doesn't have the enhanced loading content
      const hasEnhancedContent = container.querySelector('.loading-content');
      if (!hasEnhancedContent) {
        container.innerHTML = `
          <div class="phase4-widget ai-recommendations">
            <div class="widget-header">
              <h3>ü§ñ AI-Powered Recommendations</h3>
              <p>Intelligent content suggestions tailored to your interests</p>
            </div>
            <div class="widget-content">
              <div class="recommendation-item">
                <div class="rec-icon">üèÜ</div>
                <div class="rec-content">
                  <h4>Machine Learning Fundamentals</h4>
                  <p>Based on your recent activity in AI challenges</p>
                  <div class="rec-score">95% match</div>
                </div>
              </div>
              <div class="recommendation-item">
                <div class="rec-icon">üìÖ</div>
                <div class="rec-content">
                  <h4>AI Workshop Series</h4>
                  <p>Perfect for your current skill level</p>
                  <div class="rec-score">87% match</div>
                </div>
              </div>
              <div class="widget-actions">
                <button class="widget-button primary">View All Recommendations</button>
                <button class="widget-button secondary">Adjust Preferences</button>
              </div>
            </div>
          </div>
        `;
      } else {
        // Keep the enhanced content and just add functionality
        container.classList.add('component-ready');
      }
    }
    
    initializeAdvancedSearch(container) {
      // Only replace content if it doesn't have the enhanced loading content
      const hasEnhancedContent = container.querySelector('.loading-content');
      if (!hasEnhancedContent) {
        container.innerHTML = `
          <div class="phase4-widget advanced-search">
            <div class="widget-header">
              <h3>üîç Advanced Search & Discovery</h3>
              <p>Powerful search with AI-powered filtering and suggestions</p>
            </div>
            <div class="widget-content">
              <div class="search-stats">
                <div class="search-stat">
                  <div class="stat-value">1,247</div>
                  <div class="stat-label">Searchable Items</div>
                </div>
                <div class="search-stat">
                  <div class="stat-value">12</div>
                  <div class="stat-label">Search Filters</div>
                </div>
                <div class="search-stat">
                  <div class="stat-value">Voice</div>
                  <div class="stat-label">Search Enabled</div>
                </div>
              </div>
              <div class="widget-actions">
                <button class="widget-button primary">Open Advanced Search</button>
                <button class="widget-button secondary">Search History</button>
              </div>
            </div>
          </div>
        `;
      } else {
        // Keep the enhanced content and just add functionality
        container.classList.add('component-ready');
      }
    }
    
    initializeUsageAnalytics(container) {
      // Only replace content if it doesn't have the enhanced loading content
      const hasEnhancedContent = container.querySelector('.loading-content');
      if (!hasEnhancedContent) {
        container.innerHTML = `
          <div class="phase4-widget usage-analytics">
            <div class="widget-header">
              <h3>üìä Usage Analytics & Progress</h3>
              <p>Track your learning journey and platform engagement</p>
            </div>
            <div class="widget-content">
              <div class="analytics-summary">
                <div class="analytics-metric">
                  <div class="metric-icon">‚è±Ô∏è</div>
                  <div class="metric-data">
                    <div class="metric-value">2h 45m</div>
                    <div class="metric-label">Learning Time</div>
                  </div>
                </div>
                <div class="analytics-metric">
                  <div class="metric-icon">üèÜ</div>
                  <div class="metric-data">
                    <div class="metric-value">8</div>
                    <div class="metric-label">Completed</div>
                  </div>
                </div>
                <div class="analytics-metric">
                  <div class="metric-icon">üî•</div>
                  <div class="metric-data">
                    <div class="metric-value">7</div>
                    <div class="metric-label">Day Streak</div>
                  </div>
                </div>
              </div>
              <div class="widget-actions">
                <button class="widget-button primary">View Detailed Analytics</button>
                <button class="widget-button secondary">Export Data</button>
              </div>
            </div>
          </div>
        `;
      } else {
        // Keep the enhanced content and just add functionality
        container.classList.add('component-ready');
      }
    }
    
    initializeAdaptiveInterface() {
      // Create a notification about adaptive interface
      const notification = document.createElement('div');
      notification.className = 'adaptive-notification';
      notification.innerHTML = `
        <div class="notification-content">
          <div class="notification-icon">üéØ</div>
          <div class="notification-text">
            <strong>Adaptive Interface Active</strong>
            <p>The system is learning your preferences to optimize your experience</p>
          </div>
          <button class="notification-close" onclick="this.parentElement.parentElement.remove()">
            <svg width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
              <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854z"/>
            </svg>
          </button>
        </div>
      `;
      
      document.body.appendChild(notification);
      
      // Show notification with animation
      setTimeout(() => {
        notification.classList.add('notification-visible');
      }, 100);
      
      // Auto-hide after 5 seconds
      setTimeout(() => {
        if (notification.parentElement) {
          notification.classList.remove('notification-visible');
          setTimeout(() => {
            if (notification.parentElement) {
              notification.remove();
            }
          }, 300);
        }
      }, 5000);
    }
    
    showDashboard() {
      if (this.dashboardEl) {
        this.dashboardEl.style.display = 'block';
        this.dashboardEl.classList.add('animate-fade-in-up');
        this.dashboardEl.style.opacity = '1';
      }
    }
  }
  
  // Initialize dashboard when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    new PremiumDashboard();
  });
</script>

<style>
  .dashboard-container {
    margin: var(--premium-space-xl) 0;
    padding: var(--premium-space-xl) var(--premium-space-md);
    background: linear-gradient(135deg, 
      rgba(255, 255, 255, 0.05) 0%, 
      rgba(255, 255, 255, 0.02) 50%,
      rgba(255, 255, 255, 0.05) 100%);
    border-radius: var(--premium-radius-xl);
    border: 1px solid rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }
  
  .dashboard-header {
    text-align: center;
    margin-bottom: var(--premium-space-3xl);
  }
  
  .welcome-section {
    margin-bottom: var(--premium-space-2xl);
  }
  
  .welcome-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0 0 var(--premium-space-md);
    line-height: 1.2;
  }
  
  .welcome-subtitle {
    font-size: 1.125rem;
    color: var(--premium-gray-600);
    margin: 0;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--premium-space-lg);
    max-width: 800px;
    margin: 0 auto;
  }
  
  .stat-card {
    display: flex;
    align-items: center;
    gap: var(--premium-space-md);
    padding: var(--premium-space-lg);
    text-align: left;
    background: linear-gradient(135deg, 
      rgba(255, 255, 255, 0.1) 0%, 
      rgba(255, 255, 255, 0.05) 100%);
    border: 1px solid rgba(255, 255, 255, 0.15);
    border-radius: var(--premium-radius-lg);
    backdrop-filter: blur(10px);
    transition: all var(--premium-transition-normal);
  }
  
  .stat-icon {
    width: 48px;
    height: 48px;
    background: var(--premium-gradient-primary);
    border-radius: var(--premium-radius-lg);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    flex-shrink: 0;
  }
  
  .stat-content {
    flex: 1;
  }
  
  .stat-number {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--premium-gray-900);
    line-height: 1;
    margin-bottom: var(--premium-space-xs);
  }
  
  .stat-label {
    font-size: 0.875rem;
    color: var(--premium-gray-600);
    font-weight: 500;
  }
  
  .dashboard-content {
    max-width: 1200px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: var(--premium-space-2xl);
  }
  
  .section-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--premium-gray-900);
    margin: 0 0 var(--premium-space-lg);
  }
  
  .actions-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--premium-space-lg);
  }
  
  .action-card {
    display: block;
    text-decoration: none;
    color: inherit;
    padding: var(--premium-space-xl);
    text-align: center;
    transition: all var(--premium-transition-normal);
    border: 1px solid var(--premium-gray-200);
  }
  
  .action-card:hover {
    color: inherit;
    text-decoration: none;
    transform: translateY(-4px);
    box-shadow: var(--premium-shadow-lg);
    border-color: var(--premium-primary);
  }
  
  .action-icon {
    width: 48px;
    height: 48px;
    background: var(--premium-gradient-primary);
    border-radius: var(--premium-radius-lg);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    margin: 0 auto var(--premium-space-md);
  }
  
  .action-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--premium-gray-900);
    margin: 0 0 var(--premium-space-sm);
  }
  
  .action-description {
    font-size: 0.875rem;
    color: var(--premium-gray-600);
    margin: 0;
    line-height: 1.5;
  }
  
  .activity-list {
    display: flex;
    flex-direction: column;
    gap: var(--premium-space-lg);
  }
  
  .activity-item {
    display: flex;
    gap: var(--premium-space-md);
    padding: var(--premium-space-lg);
    background: var(--premium-gray-50);
    border-radius: var(--premium-radius-lg);
    border: 1px solid var(--premium-gray-200);
    transition: all var(--premium-transition-normal);
  }
  
  .activity-item:hover {
    background: white;
    box-shadow: var(--premium-shadow-sm);
  }
  
  .activity-icon {
    width: 32px;
    height: 32px;
    background: var(--premium-gray-200);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--premium-gray-600);
    flex-shrink: 0;
  }
  
  .activity-content {
    flex: 1;
  }
  
  .activity-title {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--premium-gray-900);
    margin: 0 0 var(--premium-space-xs);
  }
  
  .activity-description {
    font-size: 0.8rem;
    color: var(--premium-gray-600);
    margin: 0 0 var(--premium-space-xs);
    line-height: 1.4;
  }
  
  .activity-time {
    font-size: 0.75rem;
    color: var(--premium-gray-500);
  }
  
  /* Mobile responsive */
  @media (max-width: 768px) {
    .dashboard-content {
      grid-template-columns: 1fr;
      gap: var(--premium-space-xl);
    }
    
    .welcome-title {
      font-size: 2rem;
    }
    
    .stats-grid {
      grid-template-columns: 1fr;
    }
    
    .actions-grid {
      grid-template-columns: 1fr;
    }
  }
  
  /* Role-specific dashboard styling */
  .dashboard-management {
    border: 1px solid rgba(0, 102, 255, 0.2);
    border-radius: var(--premium-radius-xl);
  }
  
  .dashboard-working_group {
    border: 1px solid rgba(16, 185, 129, 0.2);
    border-radius: var(--premium-radius-xl);
  }
  
  .dashboard-public {
    border: 1px solid rgba(99, 102, 241, 0.2);
    border-radius: var(--premium-radius-xl);
  }
  
  /* Role-specific stat card styling */
  .stat-management {
    background: linear-gradient(135deg, rgba(0, 102, 255, 0.1) 0%, rgba(0, 82, 204, 0.1) 100%);
    border: 1px solid rgba(0, 102, 255, 0.2);
  }
  
  .stat-working_group {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.1) 0%, rgba(5, 150, 105, 0.1) 100%);
    border: 1px solid rgba(16, 185, 129, 0.2);
  }
  
  .stat-public {
    background: linear-gradient(135deg, rgba(99, 102, 241, 0.1) 0%, rgba(168, 85, 247, 0.1) 100%);
    border: 1px solid rgba(99, 102, 241, 0.2);
  }
  
  /* Enhanced stat card animations */
  .stat-card {
    transition: all var(--premium-transition-normal);
    transform: translateY(0);
  }
  
  .stat-card:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow: var(--premium-shadow-xl);
  }
  
  .stat-number {
    transition: all var(--premium-transition-normal);
  }
  
  .stat-card:hover .stat-number {
    transform: scale(1.1);
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
  }
  
  /* Enhanced action card animations */
  .action-card {
    position: relative;
    overflow: hidden;
  }
  
  .action-card::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transform: rotate(45deg) translateX(-100%);
    transition: all var(--premium-transition-slow);
  }
  
  .action-card:hover::before {
    transform: rotate(45deg) translateX(100%);
  }
  
  /* Action card categories */
  .action-primary {
    border: 2px solid var(--premium-primary);
    background: linear-gradient(135deg, rgba(0, 102, 255, 0.05) 0%, rgba(99, 102, 241, 0.05) 100%);
  }
  
  .action-secondary {
    border: 1px solid var(--premium-gray-300);
    background: var(--premium-gray-50);
  }
  
  .action-primary:hover {
    border-color: var(--premium-primary-dark);
    box-shadow: 0 8px 32px rgba(0, 102, 255, 0.2);
  }
  
  /* Action priority indicators */
  .action-priority {
    position: absolute;
    top: var(--premium-space-sm);
    right: var(--premium-space-sm);
    width: 8px;
    height: 8px;
    border-radius: 50%;
  }
  
  .priority-1 {
    background: var(--premium-success);
    box-shadow: 0 0 8px rgba(34, 197, 94, 0.4);
    animation: priorityPulse 2s infinite;
  }
  
  .priority-2 {
    background: var(--premium-primary);
    box-shadow: 0 0 6px rgba(0, 102, 255, 0.4);
  }
  
  .priority-3 {
    background: var(--premium-warning);
    box-shadow: 0 0 4px rgba(245, 158, 11, 0.4);
  }
  
  .priority-4 {
    background: var(--premium-gray-400);
  }
  
  @keyframes priorityPulse {
    0%, 100% { opacity: 1; transform: scale(1); }
    50% { opacity: 0.7; transform: scale(1.2); }
  }
  
  /* Phase 4 Component Styles */
  .phase4-components {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: var(--premium-space-xl);
    margin: var(--premium-space-2xl) 0;
  }
  
  .component-section {
    background: var(--premium-glass);
    border: 1px solid var(--premium-glass-border);
    border-radius: var(--premium-radius-lg);
    overflow: hidden;
    transition: all var(--premium-transition-normal);
  }
  
  .component-section:hover {
    transform: translateY(-2px);
    box-shadow: var(--premium-shadow-lg);
  }
  
  .component-loading {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--premium-space-xl);
    background: linear-gradient(135deg, var(--premium-glass) 0%, rgba(255, 255, 255, 0.05) 100%);
    border: 1px solid var(--premium-glass-border);
    border-radius: var(--premium-radius-lg);
    margin: var(--premium-space-md);
    backdrop-filter: blur(10px);
    transition: all var(--premium-transition-normal);
    min-height: 120px;
  }
  
  .component-loading:hover {
    transform: translateY(-2px);
    box-shadow: var(--premium-shadow-lg);
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.08) 100%);
  }
  
  .loading-content {
    text-align: center;
    max-width: 280px;
  }
  
  .loading-content h3 {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--premium-gray-800);
    margin: 0 0 var(--premium-space-sm);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--premium-space-sm);
  }
  
  .loading-content p {
    font-size: 0.875rem;
    color: var(--premium-gray-600);
    margin: 0 0 var(--premium-space-xs);
    line-height: 1.4;
  }
  
  .loading-content small {
    font-size: 0.75rem;
    color: var(--premium-gray-500);
    font-style: italic;
  }
  
  .phase4-widget {
    padding: var(--premium-space-lg);
  }
  
  .widget-header {
    margin-bottom: var(--premium-space-lg);
    border-bottom: 1px solid var(--premium-glass-border);
    padding-bottom: var(--premium-space-md);
  }
  
  .widget-header h3 {
    margin: 0 0 var(--premium-space-xs);
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--premium-gray-800);
  }
  
  .widget-header p {
    margin: 0;
    font-size: 0.875rem;
    color: var(--premium-gray-600);
  }
  
  .widget-content {
    margin-bottom: var(--premium-space-lg);
  }
  
  .widget-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--premium-space-md);
    margin-bottom: var(--premium-space-lg);
  }
  
  .mini-widget {
    display: flex;
    align-items: center;
    gap: var(--premium-space-sm);
    padding: var(--premium-space-md);
    background: var(--premium-gray-50);
    border-radius: var(--premium-radius-md);
    transition: all var(--premium-transition-normal);
  }
  
  .mini-widget:hover {
    background: var(--premium-primary);
    color: white;
    transform: scale(1.05);
  }
  
  .widget-icon {
    font-size: 1.5rem;
    flex-shrink: 0;
  }
  
  .widget-value {
    font-size: 1.2rem;
    font-weight: 700;
    color: var(--premium-gray-800);
    line-height: 1;
  }
  
  .widget-label {
    font-size: 0.8rem;
    color: var(--premium-gray-600);
  }
  
  .mini-widget:hover .widget-value,
  .mini-widget:hover .widget-label {
    color: white;
  }
  
  .recommendation-item {
    display: flex;
    align-items: flex-start;
    gap: var(--premium-space-md);
    padding: var(--premium-space-md);
    background: var(--premium-gray-50);
    border-radius: var(--premium-radius-md);
    margin-bottom: var(--premium-space-md);
    transition: all var(--premium-transition-normal);
  }
  
  .recommendation-item:hover {
    background: var(--premium-primary);
    color: white;
    transform: translateX(4px);
  }
  
  .rec-icon {
    font-size: 1.2rem;
    flex-shrink: 0;
  }
  
  .rec-content h4 {
    margin: 0 0 4px;
    font-size: 0.9rem;
    font-weight: 600;
  }
  
  .rec-content p {
    margin: 0 0 4px;
    font-size: 0.8rem;
    opacity: 0.8;
  }
  
  .rec-score {
    font-size: 0.75rem;
    font-weight: 500;
    padding: 2px 6px;
    background: var(--premium-success);
    color: white;
    border-radius: var(--premium-radius-sm);
    display: inline-block;
  }
  
  .search-stats {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--premium-space-md);
    margin-bottom: var(--premium-space-lg);
  }
  
  .search-stat {
    text-align: center;
    padding: var(--premium-space-md);
    background: var(--premium-gray-50);
    border-radius: var(--premium-radius-md);
  }
  
  .stat-value {
    font-size: 1.2rem;
    font-weight: 700;
    color: var(--premium-primary);
    margin-bottom: 4px;
  }
  
  .stat-label {
    font-size: 0.8rem;
    color: var(--premium-gray-600);
  }
  
  .analytics-summary {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--premium-space-md);
    margin-bottom: var(--premium-space-lg);
  }
  
  .analytics-metric {
    display: flex;
    align-items: center;
    gap: var(--premium-space-sm);
    padding: var(--premium-space-md);
    background: var(--premium-gray-50);
    border-radius: var(--premium-radius-md);
  }
  
  .metric-icon {
    font-size: 1.2rem;
  }
  
  .metric-value {
    font-size: 1rem;
    font-weight: 700;
    color: var(--premium-gray-800);
    line-height: 1;
  }
  
  .metric-label {
    font-size: 0.75rem;
    color: var(--premium-gray-600);
  }
  
  .widget-actions {
    display: flex;
    gap: var(--premium-space-sm);
  }
  
  .widget-button {
    flex: 1;
    padding: var(--premium-space-sm) var(--premium-space-md);
    border-radius: var(--premium-radius-md);
    font-size: 0.875rem;
    cursor: pointer;
    transition: all var(--premium-transition-normal);
    border: none;
  }
  
  .widget-button.primary {
    background: var(--premium-primary);
    color: white;
  }
  
  .widget-button.primary:hover {
    background: var(--premium-primary-dark);
    transform: translateY(-1px);
  }
  
  .widget-button.secondary {
    background: var(--premium-gray-100);
    color: var(--premium-gray-700);
    border: 1px solid var(--premium-gray-200);
  }
  
  .widget-button.secondary:hover {
    background: var(--premium-gray-200);
  }
  
  /* Adaptive Interface Notification */
  .adaptive-notification {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 10000;
    max-width: 350px;
    background: white;
    border: 1px solid var(--premium-glass-border);
    border-left: 4px solid var(--premium-primary);
    border-radius: var(--premium-radius-lg);
    box-shadow: var(--premium-shadow-xl);
    transform: translateX(100%);
    opacity: 0;
    transition: all var(--premium-transition-normal);
  }
  
  .notification-visible {
    transform: translateX(0);
    opacity: 1;
  }
  
  .notification-content {
    display: flex;
    align-items: flex-start;
    gap: var(--premium-space-md);
    padding: var(--premium-space-md);
  }
  
  .notification-icon {
    font-size: 1.2rem;
    flex-shrink: 0;
  }
  
  .notification-text {
    flex: 1;
  }
  
  .notification-text strong {
    display: block;
    font-size: 0.875rem;
    color: var(--premium-gray-800);
    margin-bottom: 2px;
  }
  
  .notification-text p {
    margin: 0;
    font-size: 0.8rem;
    color: var(--premium-gray-600);
  }
  
  .notification-close {
    background: none;
    border: none;
    color: var(--premium-gray-500);
    cursor: pointer;
    padding: 2px;
    border-radius: var(--premium-radius-sm);
    transition: all var(--premium-transition-fast);
    flex-shrink: 0;
  }
  
  .notification-close:hover {
    background: var(--premium-gray-200);
    color: var(--premium-gray-700);
  }
  
  /* Mobile responsive for Phase 4 components */
  @media (max-width: 768px) {
    .phase4-components {
      grid-template-columns: 1fr;
      gap: var(--premium-space-lg);
    }
    
    .widget-grid {
      grid-template-columns: 1fr;
    }
    
    .search-stats,
    .analytics-summary {
      grid-template-columns: 1fr;
    }
    
    .widget-actions {
      flex-direction: column;
    }
    
    .adaptive-notification {
      left: 10px;
      right: 10px;
      max-width: none;
      transform: translateY(-100%);
    }
    
    .notification-visible {
      transform: translateY(0);
    }
  }
  
  /* Dark mode */
  [data-theme="dark"] .welcome-subtitle {
    color: var(--premium-gray-400);
  }
  
  [data-theme="dark"] .stat-number {
    color: var(--premium-gray-100);
  }
  
  [data-theme="dark"] .stat-label {
    color: var(--premium-gray-400);
  }
  
  [data-theme="dark"] .action-title {
    color: var(--premium-gray-100);
  }
  
  [data-theme="dark"] .action-description {
    color: var(--premium-gray-400);
  }
  
  [data-theme="dark"] .activity-item {
    background: var(--premium-gray-800);
    border-color: var(--premium-gray-700);
  }
  
  [data-theme="dark"] .activity-item:hover {
    background: var(--premium-gray-700);
  }
  
  [data-theme="dark"] .activity-title {
    color: var(--premium-gray-100);
  }
  
  [data-theme="dark"] .activity-description {
    color: var(--premium-gray-400);
  }
</style>